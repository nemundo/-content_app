<?phpnamespace Nemundo\Content\App\PublicShare\Page;use Nemundo\Admin\Com\Copy\AdminCopyTextBox;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\Table\AdminClickableTable;use Nemundo\Admin\Com\Table\AdminTableHeader;use Nemundo\Admin\Com\Table\Row\AdminTableRow;use Nemundo\Com\Template\AbstractTemplateDocument;use Nemundo\Content\App\PublicShare\Com\PublicShareUrlContainer;use Nemundo\Content\App\PublicShare\Com\PublicShareViewForm;use Nemundo\Content\App\PublicShare\Data\PublicShare\PublicSharePaginationReader;use Nemundo\Content\App\PublicShare\Data\PublicShare\PublicShareReader;use Nemundo\Content\App\PublicShare\Parameter\PublicShareParameter;use Nemundo\Content\App\PublicShare\Site\FullPagePublicShareSite;use Nemundo\Content\App\PublicShare\Site\PublicShareDeleteSite;use Nemundo\Content\Com\Widget\ContentWidget;use Nemundo\Html\Block\Div;use Nemundo\Html\Paragraph\Paragraph;use Nemundo\Package\Bootstrap\Layout\BootstrapTwoColumnLayout;use Nemundo\Package\Bootstrap\Table\BootstrapClickableTableRow;use Nemundo\Web\Site\Site;class PublicShareAdminPage extends AbstractTemplateDocument{    public function getContent()    {        $layout = new AdminFlexboxLayout($this);        $left = new Div($layout);        $right = new Div($layout);        $table = new AdminClickableTable($left);        $reader = new PublicSharePaginationReader();        $reader->model->loadContent();        $reader->model->content->loadContentType();        $reader->model->loadView();        $header = new AdminTableHeader($table);        $header->addText($reader->model->content->subject->label);        $header->addText($reader->model->view->label);        $header->addEmpty();        $header->addEmpty();        foreach ($reader->getData() as $publicShareRow) {            //$content = $publicShareRow->content->getContent();            //if ($content !== null) {                $row = new AdminTableRow($table);                //$row->addText($publicShareRow->content->getContent()->getSubject());                $site = new Site();                $site->addParameter(new PublicShareParameter($publicShareRow->id));                $site->title = $publicShareRow->content->subject;  // getContent()->getSubject();                $row->addSite($site);                $row->addText($publicShareRow->view->viewName);                $input = new PublicShareUrlContainer($row);                $input->shareId = $publicShareRow->id;                $site = clone(FullPagePublicShareSite::$site);                $site->addParameter(new PublicShareParameter($publicShareRow->id));                $input = new AdminCopyTextBox($row);                $input->value = $site->getUrlWithDomain();                $site = clone(PublicShareDeleteSite::$site);                $site->addParameter(new PublicShareParameter($publicShareRow->id));                $row->addIconSite($site);           /* } else {            }*/        }        $parameter = new PublicShareParameter();        if ($parameter->hasValue()) {            $reader = new PublicShareReader();            $reader->model->loadContent();            $reader->model->content->loadContentType();            $reader->model->loadView();            $row = $reader->getRowById($parameter->getValue());            $p = new Paragraph($right);            $p->content = $row->view->viewName;            $form = new PublicShareViewForm($right);            $form->publicShareRow = $row;            $form->redirectSite = new Site();            $form->redirectSite->addParameter($parameter);            //$row->content->getContentType()->getView($row->viewId,$layout->col2);            $widget = new ContentWidget($right);            $widget->contentType = $row->content->getContent();            $widget->viewId = $row->viewId;        }        return parent::getContent();    }}