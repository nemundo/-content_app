<?phpnamespace Nemundo\Content\App\PublicShare\Page;use Nemundo\Admin\Com\Title\AdminTitle;use Nemundo\Admin\Com\Widget\AdminWidget;use Nemundo\Admin\Template\AdminTemplate;use Nemundo\Com\Template\AbstractTemplateDocument;use Nemundo\Content\App\PublicShare\Data\PublicShare\PublicShareCount;use Nemundo\Content\App\PublicShare\Data\PublicShare\PublicShareReader;use Nemundo\Content\App\PublicShare\Parameter\PublicShareParameter;use Nemundo\Content\App\PublicShare\Site\PublicShareSite;use Nemundo\Content\Builder\ContentBuilder;use Nemundo\Content\Com\Card\ContentCard;use Nemundo\Content\Com\Widget\ContentWidget;use Nemundo\Content\Index\File\ImageIndexTrait;use Nemundo\Core\Http\Response\StatusCode;use Nemundo\Html\Header\Title;use Nemundo\Html\Paragraph\Paragraph;use Nemundo\Package\Bootstrap\Layout\BootstrapTwoColumnLayout;use Nemundo\Package\OpenGraph\OpenGraph;use Nemundo\Package\TwitterCard\TwitterCard;class PublicSharePage extends AdminTemplate  // AbstractTemplateDocument{    public function getContent()    {        $publicShareId = (new PublicShareParameter())->getValue();        $count = new PublicShareCount();        $count->filter->andEqual($count->model->id, $publicShareId);        if ($count->getCount() == 1) {            $reader = new PublicShareReader();            $reader->model->loadContent();            $reader->model->content->loadContentType();            $shareRow = $reader->getRowById((new PublicShareParameter())->getValue());            $builder =new ContentBuilder($shareRow->contentId);            $item = $builder->getContentItem();  // $contentType->getItem($shareRow->)            $title = new Title($this);            $title->content = $item->getSubject();            $og = new OpenGraph($this);            $og->pageTitle = $item->getSubject();            $og->pageDescription = $item->getText();            $twitter=new TwitterCard($this);            $twitter->pageTitle = $item->getSubject();            $twitter->pageDescription = $item->getText();            if ($item->isObjectOfTrait(ImageIndexTrait::class)) {                $og->pageImage = $item->getImageUrl();                $twitter->pageImage = $item->getImageUrl();            }            $title = new AdminTitle($this);            $title->content = $item->getSubject();            $builder->getDefaultView($this);            //$contentType = $shareRow->content->getContent();           /* $builder = new ContentBuilder($shareRow->contentId);            $item = $builder->getContentItem();            $title = new Title($this);            $title->content = $item->getSubject();  // $contentType->getSubject();            /*$layout = new BootstrapTwoColumnLayout($this);            $layout->col1->columnWidth=12;            $layout->col2->columnWidth=0;*/           /* $widget= new ContentCard($this);  // new ContentWidget($layout->col1);            $widget->contentId = $shareRow->contentId;*/            /*$widget->contentType= $contentType;            $widget->viewId = $shareRow->viewId;            $widget->editable=false;            $widget->showAction=false;            $widget->redirectSite= clone(PublicShareSite::$site);            //$widget->redirectSite->addParameter(new PublicShareParameter());            /*            $widget = new AdminWidget($layout->col1);            $widget->widgetTitle = $contentType->getSubject();            $contentType->getDefaultView($widget);*/            /*$container = new CalendarContainer($layout->col2);            $container->contentType = $contentType;*/        } else {            $this->statusCode = StatusCode::NOT_FOUND;            $p = new Paragraph($this);            $p->content = 'Content not found';        }        return parent::getContent();    }}