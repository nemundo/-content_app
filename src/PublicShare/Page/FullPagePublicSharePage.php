<?phpnamespace Nemundo\Content\App\PublicShare\Page;use Nemundo\Admin\AdminConfig;use Nemundo\Admin\Com\Widget\AdminWidget;use Nemundo\Com\Template\AbstractTemplateDocument;use Nemundo\Content\App\PublicShare\Data\PublicShare\PublicShareCount;use Nemundo\Content\App\PublicShare\Data\PublicShare\PublicShareReader;use Nemundo\Content\App\PublicShare\Parameter\PublicShareParameter;use Nemundo\Content\App\PublicShare\Site\PublicShareSite;use Nemundo\Content\Builder\ContentBuilder;use Nemundo\Content\Com\Widget\ContentWidget;use Nemundo\Content\Index\File\ImageIndexTrait;use Nemundo\Core\Http\Response\StatusCode;use Nemundo\Html\Header\Title;use Nemundo\Html\Paragraph\Paragraph;use Nemundo\Package\Bootstrap\Document\BootstrapDocument;use Nemundo\Package\Bootstrap\Layout\BootstrapTwoColumnLayout;use Nemundo\Package\OpenGraph\OpenGraph;class FullPagePublicSharePage extends BootstrapDocument{    public function getContent()    {        $publicShareId = (new PublicShareParameter())->getValue();        $count = new PublicShareCount();        $count->filter->andEqual($count->model->id, $publicShareId);        if ($count->getCount() == 1) {            $reader = new PublicShareReader();            $reader->model->loadContent();            $reader->model->content->loadContentType();            $shareRow = $reader->getRowById((new PublicShareParameter())->getValue());            //$contentType = $shareRow->content->getContent();            $builder =new ContentBuilder($shareRow->contentId);            $item = $builder->getContentItem();  // $contentType->getItem($shareRow->)            $title = new Title($this);            $title->content = $item->getSubject();            $og = new OpenGraph($this);            $og->pageTitle = $item->getSubject();            $og->pageDescription = '';            if ($item->isObjectOfTrait(ImageIndexTrait::class)) {            $og->pageImage = $item->getImageUrl();            }            $builder->getDefaultView($this);        } else {            $this->statusCode = StatusCode::NOT_FOUND;            $p = new Paragraph($this);            $p->content = 'Content not Found';        }        return parent::getContent();    }}