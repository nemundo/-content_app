<?phpnamespace Nemundo\Content\App\Contact\Content\Contact;use Nemundo\Admin\Com\ListBox\AdminTextBox;use Nemundo\Content\App\Contact\Data\Contact\ContactModel;use Nemundo\Content\Form\AbstractContentForm;class ContactForm extends AbstractContentForm{    /**     * @var AdminTextBox     */    private $company;    /**     * @var AdminTextBox     */    private $firstName;    /**     * @var AdminTextBox     */    private $lastName;    /**     * @var AdminTextBox     */    private $street;    /**     * @var AdminTextBox     */    private $postalCode;    /**     * @var AdminTextBox     */    private $city;    /**     * @var AdminTextBox     */    private $phone;    /**     * @var AdminTextBox     */    private $email;    public function getContent()    {        $model = new ContactModel();        $this->company = new AdminTextBox($this);        $this->company->label = $model->company->label;        $this->lastName = new AdminTextBox($this);        $this->lastName->label = $model->lastName->label;        $this->firstName = new AdminTextBox($this);        $this->firstName->label = $model->firstName->label;        $this->street = new AdminTextBox($this);        $this->street->label = $model->street->label;        $this->postalCode = new AdminTextBox($this);        $this->postalCode->label = $model->postalCode->label;        $this->city = new AdminTextBox($this);        $this->city->label = $model->city->label;        $this->phone = new AdminTextBox($this);        $this->phone->label = $model->phone->label;        $this->email = new AdminTextBox($this);        $this->email->label = $model->email->label;        return parent::getContent();    }    protected function loadUpdateForm()    {        $contactRow = (new ContactItem($this->dataId))->getDataRow();        $this->company->value = $contactRow->company;        $this->lastName->value = $contactRow->lastName;        $this->firstName->value = $contactRow->firstName;        $this->street->value = $contactRow->street;        $this->postalCode->value = $contactRow->postalCode;        $this->city->value = $contactRow->city;        $this->phone->value = $contactRow->phone;        $this->email->value = $contactRow->email;    }    protected function onSave()    {        $builder = new ContactBuilder($this->dataId);        $builder->company = $this->company->getValue();        $builder->lastName = $this->lastName->getValue();        $builder->firstName = $this->firstName->getValue();        $builder->street = $this->street->getValue();        $builder->postalCode = $this->postalCode->getValue();        $builder->city = $this->city->getValue();        $builder->phone = $this->phone->getValue();        $builder->email = $this->email->getValue();        $builder->addActionList($this->getActionList());        $builder->buildContent();    }}