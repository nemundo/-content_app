<?phpnamespace Nemundo\Content\App\Camera\Page;use Nemundo\Admin\Com\Image\AdminImage;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\Pagination\AdminPagination;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Com\TableBuilder\TableRow;use Nemundo\Content\App\Camera\Content\Camera\CameraForm;use Nemundo\Content\App\Camera\Data\Camera\CameraPaginationReader;use Nemundo\Content\App\Camera\Template\CameraTemplate;class CameraPage extends CameraTemplate{    public function getContent()    {        $layout = new AdminFlexboxLayout($this);        new CameraForm($layout);        $cameraReader = new CameraPaginationReader();        $table = new AdminTable($layout);        foreach ($cameraReader->getData() as $cameraRow) {            $row = new TableRow($table);            $row->addText($cameraRow->camera);            $img = new AdminImage($row);            $img->src = $cameraRow->image->getUrl();            $img->width = 300;        }        $pagination = new AdminPagination($this);        $pagination->paginationReader = $cameraReader;        //$jumbotron= new AdminWidget($this);        // new BootstrapJumbotron($this);        //$type=new CameraType();        //$type->getDefaultForm($jumbotron);        //$type->getListing($this);        /*        $cameraReader=new CameraPaginationReader();        $table=new AdminTable($this);        foreach ($cameraReader->getData() as $cameraRow) {            $row=new TableRow($table);            $row->addText($cameraRow->camera);            $img= new BootstrapResponsiveImage($row);            $img->src=$cameraRow->image->getUrl();            $img->width = 300;        }        $pagination=new BootstrapPagination($this);        $pagination->paginationReader=$cameraReader;*/        return parent::getContent();    }}