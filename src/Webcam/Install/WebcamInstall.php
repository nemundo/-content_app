<?phpnamespace Nemundo\Content\App\Webcam\Install;use Nemundo\App\Application\Setup\ApplicationSetup;use Nemundo\App\Application\Type\Install\AbstractInstall;use Nemundo\App\Script\Setup\ScriptSetup;use Nemundo\App\WebService\Setup\ServiceRequestSetup;use Nemundo\Content\App\ImageTimeline\Application\ImageTimelineApplication;use Nemundo\Content\App\Webcam\Application\WebcamApplication;use Nemundo\Content\App\Webcam\Content\Webcam\WebcamContentType;use Nemundo\Content\App\Webcam\Data\WebcamModelCollection;use Nemundo\Content\App\Webcam\Script\WebcamCleanScript;use Nemundo\Content\App\Webcam\Service\WebcamItemService;use Nemundo\Content\App\Webcam\Service\WebcamListService;use Nemundo\Content\App\Webcam\Service\WebcamPostService;use Nemundo\Content\Index\Geo\Setup\GeoContentTypeSetup;use Nemundo\Model\Setup\ModelCollectionSetup;class WebcamInstall extends AbstractInstall{    public function install()    {        (new ImageTimelineApplication())->installApp();        (new ApplicationSetup())            ->addApplication(new WebcamApplication());        (new ModelCollectionSetup())            ->addCollection(new WebcamModelCollection());        (new ScriptSetup(new WebcamApplication()))            ->addScript(new WebcamCleanScript());        /*(new SchedulerSetup(new WebcamApplication()))            ->addScheduler(new WebcamImageCrawlerScheduler());*/        /*(new ContentTypeSetup(new WebcamApplication()))            ->addContentType(new WebcamContentType());*/        (new GeoContentTypeSetup(new WebcamApplication()))            ->addContentType(new WebcamContentType());        (new ServiceRequestSetup(new WebcamApplication()))            ->addService(new WebcamPostService())            ->addService(new WebcamItemService())            ->addService(new WebcamListService());    }}