<?phpnamespace Nemundo\Content\App\File\Content\Image;use Nemundo\Content\App\File\Data\Image\ImageModel;use Nemundo\Content\App\File\Data\Image\ImageReader;use Nemundo\Content\App\File\Data\Image\ImageRow;use Nemundo\Content\Index\Download\DownloadIndexTrait;use Nemundo\Content\Index\File\ImageIndexTrait;use Nemundo\Content\Type\AbstractContentItem;class ImageItem extends AbstractContentItem{    use ImageIndexTrait;    use DownloadIndexTrait;    protected function loadItem()    {        $this->contentType = new ImageType();    }    protected function onDataRow()    {        $this->dataRow = (new ImageReader())->getRowById($this->dataId);    }    /**     * @return \Nemundo\Model\Row\AbstractModelDataRow|ImageRow     */    public function getDataRow()    {        return parent::getDataRow();    }    public function getImageUrl()    {        return $this->getDataRow()->image->getImageUrl($this->getDataRow()->model->imageAutoSize400);    }    public function getImageFilename()    {        return $this->getDataRow()->image->getFullFilename();    }    public function getSubject()    {        return $this->getDataRow()->orginalFilename;    }    public function getDateTime()    {        return $this->getDataRow()->dateTime;    }    public function getDownloadUrl()    {        return $this->getDataRow()->image->getUrl();    }    public function getData()    {        $imageRow = $this->getDataRow();        $model = new ImageModel();        $data = [];        $data['id'] = $imageRow->id;        $data['filename'] = $imageRow->orginalFilename;        /*$data['image_url'] = $imageRow->image->getImageUrl($this->getDataRow()->model->imageAutoSize400);        $data['image_url_small'] = $imageRow->image->getImageUrl($imageRow->model->imageAutoSize400);        $data['image_url_large'] = $imageRow->image->getImageUrl($imageRow->model->imageAutoSize1200);*/        $data['image_url'] = $imageRow->image->getImageUrl($model->imageAutoSize400);        $data['image_url_small'] = $imageRow->image->getImageUrl($model->imageAutoSize400);        $data['image_url_large'] = $imageRow->image->getImageUrl($model->imageAutoSize1200);        $data['image_url_orginal'] = $imageRow->image->getUrl();        //$data['base64'] = (new Base64File($this->getDataRow()->image->getFullFilename()))->getBase64();        return $data;    }}