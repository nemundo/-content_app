<?phpnamespace Nemundo\Content\App\File\Content\Upload;use Nemundo\Content\App\File\Content\Audio\AudioBuilder;use Nemundo\Content\App\File\Content\Audio\AudioType;use Nemundo\Content\App\File\Content\Document\DocumentBuilder;use Nemundo\Content\App\File\Content\Document\DocumentType;use Nemundo\Content\App\File\Content\File\FileContentType;use Nemundo\Content\App\File\Content\Image\ImageBuilder;use Nemundo\Content\App\File\Content\Image\ImageType;use Nemundo\Content\App\File\Content\Video\VideoBuilder;use Nemundo\Content\App\File\Content\Video\VideoType;use Nemundo\Core\Base\AbstractBase;use Nemundo\Core\File\FileInformation;use Nemundo\Model\Data\Property\File\FileProperty;class UploadFile extends AbstractBase{    /**     * @var FileProperty     */    public $file;    public $parentId;    public function __construct()    {        $this->file = new FileProperty();    }    public function uploadFile()    {        $filename = null;        if ($this->file->hasFilename()) {            $filename = $this->file->getFilename();        }        if ($this->file->hasUrl()) {            $filename = $this->file->getUrl();        }        if ($this->file->hasFileRequest()) {            $filename = $this->file->getFileRequest()->filename;        }        $file = new FileInformation($filename);        if ($file->isText()||$file->isWord()||$file->isPdf()) {            $builder = new DocumentBuilder();            $builder->document = $this->file;            $builder->buildContent();        }        if ($file->isImage()) {            $builder = new ImageBuilder();            $builder->image = $this->file;            $builder->buildContent();        }        if ($file->isAudio()) {            $builder = new AudioBuilder();            $builder->audio = $this->file;            $builder->buildContent();        }        if ($file->isVideo()) {            $builder = new VideoBuilder();            $builder->video = $this->file;            $builder->buildContent();        }    }}