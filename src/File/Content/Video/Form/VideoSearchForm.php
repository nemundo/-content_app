<?phpnamespace Nemundo\Content\App\File\Content\Video\Form;use Nemundo\Admin\Com\Image\AdminImage;use Nemundo\Com\Html\Listing\UnorderedList;use Nemundo\Content\App\File\Content\Image\ImageItem;use Nemundo\Content\App\File\Content\Video\VideoItem;use Nemundo\Content\App\File\Data\Image\ImageReader;use Nemundo\Content\App\File\Data\ImageIndex\ImageIndexReader;use Nemundo\Content\App\File\Data\Video\VideoReader;use Nemundo\Content\Builder\ContentBuilder;use Nemundo\Content\Form\AbstractContentForm;use Nemundo\Content\Index\Tree\Com\Form\AbstractContentSearchForm;use Nemundo\Core\Http\Request\Post\PostRequest;use Nemundo\Html\Form\Button\SubmitButton;use Nemundo\Package\Bootstrap\Image\BootstrapResponsiveImage;class VideoSearchForm extends AbstractContentForm  // AbstractContentSearchForm{    protected $requestName = 'data_id';    public $formName = 'Video Search';    public function getContent()    {        $ul = new UnorderedList($this);        $reader = new VideoReader();        foreach ($reader->getData() as $videoRow) {            $btn = new SubmitButton($ul);            $btn->name = $this->requestName;            $btn->label = $videoRow->orginalFilename;            $btn->value = $videoRow->id;        }        $this->submitButton->visible = false;        return parent::getContent();    }    protected function onSave()    {        $value = (new PostRequest($this->requestName))->getValue();        $item = new VideoItem($value);        foreach ($this->getActionList() as $action) {            $action->onAction($item);        }    }}