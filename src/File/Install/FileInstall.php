<?phpnamespace Nemundo\Content\App\File\Install;use Nemundo\App\Application\Type\Install\AbstractInstall;use Nemundo\App\WebService\Setup\ServiceRequestSetup;use Nemundo\Content\Action\Setup\ActionSetup;use Nemundo\Content\App\File\Action\DownloadFileContentAction;use Nemundo\Content\App\File\Application\FileApplication;use Nemundo\Content\App\File\Content\Audio\AudioType;use Nemundo\Content\App\File\Content\Document\DocumentType;use Nemundo\Content\App\File\Content\File\FileContentType;use Nemundo\Content\App\File\Content\Image\ImageType;use Nemundo\Content\App\File\Content\Upload\UploadContentType;use Nemundo\Content\App\File\Content\Video\VideoType;use Nemundo\Content\App\File\Content\WebFile\WebFileContentType;use Nemundo\Content\App\File\Data\FileModelCollection;use Nemundo\Content\App\File\Job\UrlDownloadJob;use Nemundo\Content\App\File\Service\FileUploadServiceRequest;use Nemundo\Content\App\File\Service\Image\ImageCountService;use Nemundo\Content\App\File\Service\Image\ImageDeleteAllServiceRequest;use Nemundo\Content\App\File\Service\ImageDeleteServiceRequest;use Nemundo\Content\App\File\Service\ImageDownloadService;use Nemundo\Content\App\File\Service\ImageListServiceRequest;use Nemundo\Content\App\File\Service\ImagePostServiceRequest;use Nemundo\Content\App\File\Service\ImageUrlServiceRequest;use Nemundo\Content\App\File\Service\TreeFileUploadService;use Nemundo\Content\App\File\Service\UrlFilePostService;use Nemundo\Content\App\File\Service\Video\VideoPostServiceRequest;use Nemundo\Content\Application\ContentApplication;use Nemundo\Content\Setup\ContentTypeSetup;use Nemundo\Model\Setup\ModelCollectionSetup;use Nemundo\Project\Path\WebTmpPath;class FileInstall extends AbstractInstall{    public function install()    {        (new ContentApplication())->installApp();        (new ModelCollectionSetup())            ->addCollection(new FileModelCollection());        (new ContentTypeSetup(new FileApplication()))            ->addContentType(new DocumentType())            ->addContentType(new VideoType())            ->addContentType(new AudioType())            ->addContentType(new ImageType());        /*    ->addContentType(new FileContentType())            ->addContentType(new WebFileContentType())            ->addContentType(new DocumentContentType())            ->addContentType(new AudioContentType())            ->addContentType(new VideoContentType())            ->addContentType(new ImageContentType())            ->addContentType(new UploadContentType())            ->addContentType(new UrlDownloadJob());*/        /*(new ActionSetup())            ->addContentAction(new DownloadFileContentAction());        (new ServiceRequestSetup())            ->addService(new TreeFileUploadService())            ->addService(new ImageCountService())            ->addService(new ImageDownloadService())            ->addService(new FileUploadServiceRequest())            ->addService(new UrlFilePostService())            ->addService(new ImagePostServiceRequest())            ->addService(new ImageDeleteServiceRequest())            ->addService(new ImageDeleteAllServiceRequest())            ->addService(new ImageListServiceRequest())            ->addService(new ImageUrlServiceRequest())            ->addService(new VideoPostServiceRequest());*/        (new WebTmpPath())->createPath();    }}