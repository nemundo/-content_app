<?phpnamespace Nemundo\Content\App\ImageGallery\Content\ImageGallery;use Nemundo\Admin\Com\Image\AdminImage;use Nemundo\Admin\Com\ListBox\AdminFileUpload;use Nemundo\Admin\Com\ListBox\AdminTextBox;use Nemundo\Admin\Com\Table\AdminBootstrapTable;use Nemundo\Com\TableBuilder\TableRow;use Nemundo\Content\App\ImageGallery\Data\Image\ImageReader;use Nemundo\Content\Form\AbstractContentForm;use Nemundo\Html\Form\Input\AcceptFileType;use Nemundo\Model\Data\Property\File\FileProperty;class ImageGalleryForm extends AbstractContentForm{    /**     * @var AdminTextBox     */    private $imageGallery;    /**     * @var AdminFileUpload     */    private $upload;    public function getContent()    {        $this->imageGallery = new AdminTextBox($this);        $this->imageGallery->label = 'Image Gallery';        $this->imageGallery->validation = true;        $this->upload = new AdminFileUpload($this);        $this->upload->label = 'Image';        $this->upload->acceptFileType = AcceptFileType::IMAGE;        $this->upload->multiUpload = true;        return parent::getContent();    }    protected function loadUpdateForm()    {        $dataRow = (new ImageGalleryItem($this->dataId))->getDataRow();  // $this->contentType->getDataRow();        $this->imageGallery->value = $dataRow->imageGallery;        $table = new AdminBootstrapTable($this);        $imageReader = new ImageReader();        $imageReader->filter->andEqual($imageReader->model->galleryId, $this->getDataId());        foreach ($imageReader->getData() as $imageRow) {            $tableRow = new TableRow($table);            $img = new AdminImage($tableRow);            $img->src = $imageRow->image->getImageUrl($imageRow->model->imageAutoSize400);            /*            $site=clone(ImageDeleteSite::$site);            $site->addParameter(new ImageParameter($imageRow->id));            $row->addIconSite($site);*/        }    }    protected function onSave()    {        $builder = new ImageGalleryBuilder($this->dataId);        $builder->imageGallery = $this->imageGallery->getValue();        $builder->addActionList($this->getActionList());        $builder->buildContent();        foreach ($this->upload->getMultiFileRequest() as $fileRequest) {            $builder->addImage((new FileProperty())->fromFileRequest($fileRequest));        }    }}