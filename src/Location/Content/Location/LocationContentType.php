<?phpnamespace Nemundo\Content\App\Location\Content\Location;use Nemundo\Content\App\Location\Data\Location\Location;use Nemundo\Content\App\Location\Data\Location\LocationReader;use Nemundo\Content\App\Location\Data\Location\LocationRow;use Nemundo\Content\Index\Geo\Type\GeoIndexTrait;use Nemundo\Content\Type\AbstractContentType;use Nemundo\Content\Type\JsonContentTrait;use Nemundo\Core\Type\Geo\GeoCoordinate;class LocationContentType extends AbstractContentType{    use JsonContentTrait;    use GeoIndexTrait;    public $location;    public $description;    /**     * @var GeoCoordinate     */    public $geoCoordinate;    protected function loadContentType()    {        $this->typeLabel = 'Location';        $this->typeId = '33e62a5f-6ad1-48db-ad70-d86d516c8098';        $this->formClassList[] = LocationContentForm::class;        $this->viewClassList[] = LocationContentView::class;        $this->geoCoordinate=new GeoCoordinate();    }    protected function onCreate()    {        $data = new Location();        $data->location = $this->location;        $data->description = $this->description;        $data->geoCoordinate = $this->geoCoordinate;        $this->dataId = $data->save();    }    protected function onUpdate()    {    }    protected function onDataRow()    {        $this->dataRow = (new LocationReader())->getRowById($this->dataId);    }    /**     * @return \Nemundo\Model\Row\AbstractModelDataRow|LocationRow     */    public function getDataRow()    {        return parent::getDataRow();    }    public function getSubject()    {        return $this->getDataRow()->location;    }    public function getCoordinate()    {        return $this->getDataRow()->geoCoordinate;    }    public function getData()    {        $dataRow = $this->getDataRow();        $data = [];        $data['location'] = $dataRow->location;        $data['description'] = $dataRow->location;        $coordinate = [];        $coordinate['lat'] = (double)$dataRow->geoCoordinate->latitude;        $coordinate['lon'] = (double)$dataRow->geoCoordinate->longitude;        $data['coordinate'] = $coordinate;        return $data;    }}